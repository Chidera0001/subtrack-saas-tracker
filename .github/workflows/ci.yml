name: CI Pipeline

on:
    pull_request:
        branches: [main, develop]
    push:
        branches: [develop]

jobs:
    test-backend:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:13
                env:
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: subtrack_test
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  cache: "npm"
                  cache-dependency-path: backend/package-lock.json

            - name: Install backend dependencies
              working-directory: ./backend
              run: npm ci

            - name: Run backend linting
              working-directory: ./backend
              run: npm run lint

            - name: Run backend tests
              working-directory: ./backend
              run: npm test
              env:
                  DB_HOST: localhost
                  DB_PORT: 5432
                  DB_NAME: subtrack_test
                  DB_USER: postgres
                  DB_PASSWORD: postgres
                  JWT_SECRET: test_secret

    test-frontend:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  cache: "npm"
                  cache-dependency-path: frontend/package-lock.json

            - name: Install frontend dependencies
              working-directory: ./frontend
              run: npm ci

            - name: Run frontend linting
              working-directory: ./frontend
              run: npm run lint

            - name: Run frontend tests
              working-directory: ./frontend
              run: npm test -- --coverage --watchAll=false

            - name: Build frontend
              working-directory: ./frontend
              run: npm run build

    code-quality:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"

            - name: Install dependencies
              run: |
                  cd backend && npm ci
                  cd ../frontend && npm ci

            - name: Check code formatting
              run: |
                  cd backend && npm run format:check
                  cd ../frontend && npm run format:check
